datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator prismaThirdPartyGenerator {
  provider               = "prisma-includes-generator"
  seperateRelationFields = true
}

enum Status {
  PENDING
  LIVE
  DELETED
  REMOVED
}

model Post {
  id        String   @id @default(uuid()) @database.Uuid
  status    Status
  text      String
  author    User     @relation(fields: [authorId], references: [email])
  authorId  String   @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("post")
}

model User {
  posts           Post[]
  auth            Auth?
  friends         User[]   @relation(name: "friends")
  friendRelations User[]   @relation(name: "friends")
  email           String
  fullName        String   @map("full_name")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("user")
  @@id([email])
}

model Auth {
  id        String   @id @default(uuid()) @database.Uuid
  hash      String
  salt      String
  user      User     @relation(fields: [userId], references: [email])
  userId    String   @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
